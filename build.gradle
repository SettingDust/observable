buildscript {
    ext.kotlin_version = '1.9.10'
    ext.kotlin_serialization_version = '1.6.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.3.+" apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.10'
    id "me.shedaniel.unified-publishing" version "0.1.+"
    id "io.gitlab.arturbosch.detekt" version "1.23.1"
    id "org.jlleitschuh.gradle.ktlint" version "11.5.1"
}

apply plugin: 'kotlin'

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "org.jlleitschuh.gradle.ktlint"

    ktlint {
        disabledRules = ["no-wildcard-imports"]
    }

    loom {
        silentMojangMappingsLicense()

        runs {
            server {
                serverWithGui()
            }
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.16.5+build.9:v2"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-protobuf:$kotlin_serialization_version"
        implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlin_serialization_version"
    }

}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        maven { url 'https://jitpack.io' }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"

        // The Minecraft launcher currently installs Java 8 for users, so your mod probably wants to target Java 8 too
        // JDK 9 introduced a new way of specifying this that will make sure no newer classes or methods are used.
        // We'll use that if it's available, but otherwise we'll use the older option.
        def targetVersion = 17
        if (JavaVersion.current().isJava9Compatible()) {
            options.release = targetVersion
        }
    }

    java {
        withSourcesJar()
    }
}
repositories {
    mavenCentral()
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
